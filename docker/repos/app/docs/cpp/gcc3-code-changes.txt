The upgrade to GCC 3.1 may require some changes to C++ submissions to
make them conform to standards that weren't implemented prior to 3.x,
but are now enforced:

* Everything in the C++ standard library (a.k.a. Standard Template
  Library or STL) is declared in the namespace std; previously they
  were all declared globally.  The most convenient way to use standard
  library symbols is to add the declaration "using namespace std;"
  before any code that uses identifiers from the library.

  It is also possible to simply prefix every affected identifier with
  "std::"; e.g. "std::vector<std::string> d;" or "r=std::max(r,x);".
  Or only a few select symbols can be imported into the global scope
  with a directive like "using std::string;" or "using std::find;".

* Make sure that you really do include all the headers you use.
  Previously certain library headers would include other headers
  (e.g. <algorithm> would pull in <iostream>), but the new gcc is
  somewhat tidier about such things.

* Non-standard library extensions present with the old GCC may no
  longer be available; for details see the library documentation at
  http://gcc.gnu.org/onlinedocs/libstdc++/libstdc++-html-USERS-3.1

And in general, those people with large code libraries that they paste
into every problem (you know who you are) should test them in a
practice room to catch any potential problems there, rather than
during an actual match.
