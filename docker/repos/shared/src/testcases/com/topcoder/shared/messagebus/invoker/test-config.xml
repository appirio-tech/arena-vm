<bus>
    <channels>
        <!-- Defines configuration parameters for JMS Connections, Subscribers, Publishers, etc -->
        
        <channel name="DEFAULT_TOPIC_CONFIG" 
            destinationType="TOPIC" 
            destinationName="MAIN_CHANNEL"
            sharedConnection="false"
            sharedConnectionName=""
            selectorString=""
            noLocal="false"
            durableSubscriber="false"
            durableSubscriberName="">
            
            <property name="URL">
                <value>failover:(tcp://localhost:61616)?initialReconnectDelay=100&amp;maxReconnectDelay=5000&amp;useExponentialBackOff=false</value>
            </property>
        </channel>
        
        <!-- Configuration can extend another configuration, it means it will be created
             using the same values of the extended configuration, and defined values will be
             overwritten -->
        <channel name="JMS_TOPIC_CONFIG_REQ" extendsConfig="DEFAULT_TOPIC_CONFIG"
                noLocal="false">
            <selectorString>BMType='BusResponse' AND BMBodyType LIKE 'test:%' AND BMSerializationMethod='CUSTOM'</selectorString>
        </channel>
        <channel name="JMS_TOPIC_CONFIG_RES" extendsConfig="DEFAULT_TOPIC_CONFIG"
                noLocal="false">
            <selectorString>BMType='BusRequest' AND BMBodyType LIKE 'test:%' AND BMSerializationMethod='CUSTOM'</selectorString>
        </channel>

        <channel name="JMS_PUBLISHER_CONFIG" extendsConfig="DEFAULT_TOPIC_CONFIG"
                noLocal="false" sharedConnection="false" sharedConnectionName="MAIN_CHANNEL_PUBLISHER">
        </channel>
    </channels>
    
    <!-- Actual configuration for listener, publisher, etc -->
    <!-- When searching for a configuration, type, key and module must match. If module is not
         defined it applies to any module. --> 
    <connectors>
        <connector type="listener"  key="test-cfg-req" module="" channel="JMS_TOPIC_CONFIG_REQ" />
        <connector type="publisher" key="test-cfg-req" module="" channel="JMS_PUBLISHER_CONFIG" />
        <connector type="listener"  key="test-cfg-res" module="" channel="JMS_TOPIC_CONFIG_RES" />
        <connector type="publisher" key="test-cfg-res" module="" channel="JMS_PUBLISHER_CONFIG" />
    </connectors>
    
    <!-- JMSMessage mappers -->
    <!-- Defines mapper factories to use when receiving or sending JMS messages.
         All attributes are Regular expressions except for mapperFactoryClass. 
         Messages sent through the bus, contains 3 properties defining the body of the message.
         messageType: The Type of message it represents, eg: RoundEvent
         bodyType: Defining the exact type of the body. Recommended: namespace:TypeName
         serializationMethod: The Serialization method used for the body. eg: CUSTOM 
         
         Mappers are searched in the same order in which they are defined. The first matching mapper
         will be used. Because of this, more generic mappers you be put after the less generic ones.
     --> 
    <mappers>
        <mapper messageType="BusRequest" 
                bodyType="test\:.*"
                serializationMethod="CUSTOM" 
                mapperFactoryClass="com.topcoder.shared.messagebus.jms.mapper.custom.CustomSerializableMessageMapperFactory"/>
                
        <mapper messageType="BusRequest" 
                bodyType="test\:.*" 
                mapperFactoryClass="com.topcoder.shared.messagebus.jms.mapper.custom.CustomSerializableMessageMapperFactory"/>
     
        <mapper messageType="BusResponse" 
                bodyType="test\:.*"
                serializationMethod="CUSTOM" 
                mapperFactoryClass="com.topcoder.shared.messagebus.jms.mapper.custom.CustomSerializableMessageMapperFactory"/>
                
        <mapper messageType="BusResponse" 
                bodyType="test\:.*" 
                mapperFactoryClass="com.topcoder.shared.messagebus.jms.mapper.custom.CustomSerializableMessageMapperFactory"/>
    </mappers>
</bus>