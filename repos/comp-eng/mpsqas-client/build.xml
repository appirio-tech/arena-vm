<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="mpsqas-client" basedir="." default="publish-workspace">
    <property environment="env"/>
    <property name="root.dir" location="${basedir}/../.." />
    <property name="glue.dir" location="${root.dir}/glue" />

    <import file="${glue.dir}/glue-jar.xml" />

    <condition property="build.properties-file" value="build.properties.${env.ARENA_BUILD_TARGET}" else="build.properties">
        <isset property="env.ARENA_BUILD_TARGET"/>
    </condition>
    <property file="${build.properties-file}"/>
    <property file="../../applets-key.properties"/>

    <property name="deployment.dir" location="${basedir}/deployment"/>
    <property name="is.need.update.jar.security" value="true" />
    <property name="permission_type" value="all-permissions" />
    <property name="code_base" value="${applet.code_base}" />
	
	<!-- ================================= 
          target: package-applet              
         ================================= -->
    <target name="package-applet" depends="publish-workspace" description="Package the applet into a single file">
    	<mkdir dir="${build.dir}/tmp-zip"/>
        <copy todir="${build.dir}/tmp-zip" overwrite="true">
            <fileset dir="${deployment.dir}" includes="**/*.bat, **/*.sh, MPSQASProd.jnlp"/>
        	<filterset>
        		<filter token="filename.mpsqas-client" value="${filename.mpsqas-client}"/>
        		<filter token="filename.basic_type_serialization" value="${filename.basic_type_serialization}"/>
        		<filter token="filename.client-socket" value="${filename.client-socket}"/>
        		<filter token="filename.concurrent" value="${filename.concurrent}"/>
        		<filter token="filename.encoder" value="${filename.encoder}"/>
        		<filter token="filename.logging" value="${filename.logging}"/>
        		<filter token="filename.arena-shared" value="${filename.arena-shared}"/>
        		<filter token="filename.client-common" value="${filename.client-common}"/>
        		<filter token="filename.compeng-common" value="${filename.compeng-common}"/>
        		<filter token="filename.custom-serialization" value="${filename.custom-serialization}"/>
        		<filter token="filename.http-tunnel-client" value="${filename.http-tunnel-client}"/>
        		<filter token="filename.log4j" value="${filename.log4j}"/>
        		<filter token="applet.host" value="${applet.host}"/>
        		<filter token="applet.port" value="${applet.port}"/>
        		<filter token="applet.code_base" value="${applet.code_base}"/>
        		<filter token="applet.href" value="${applet.href}"/>
        		<filter token="applet.homepage" value="${applet.homepage}"/>
        		<filter token="applet.lib-url" value="${applet.lib-url}"/>
        	</filterset>
    	</copy>

		<signjar alias="${applet.keystore-alias}" keystore="${applet.keystore}" storepass="${applet.storepass}">
			<path>
				<fileset file="${jar.name}"/>
				<fileset dir="${build.lib.dir}" includes="*.jar"/>
			</path>
		</signjar>

    	<zip destfile="${build.dir}/mpsqas-client-${app.version}.zip">
    		<zipfileset dir="${build.dir}/tmp-zip"/>
    		<zipfileset dir="${build.lib.dir}"/>
    		<zipfileset file="${jar.name}"/>
    	</zip>
    </target>

    <target name="copy-client-zip" depends="version">
        <copy file="${build.dir}/mpsqas-client-${app.version}.zip"
		tofile="${build.dir}/mpsqas-client.zip"
		verbose="true"/>
    </target>

    <target name="run-applet" description="Builds and run the MPSQAS client applet" depends="publish-workspace, run-applet-standalone" />

	
    <target name="run-applet-standalone">
        <java classname="com.topcoder.client.mpsqasApplet.LaunchMPSQAS" fork="true">
            <jvmarg value="-Dsun.java2d.noddraw=true" />
            <arg value="${applet.host}" />
            <arg value="${applet.port}" />
            <classpath refid="classpath.lib" />
            <classpath refid="classpath.artifacts" />
        </java>
    </target>
</project>
