SERVER SIDE
-----------
- kill Matrxi2d
- queries should not use > or < for problem_status, should use in
- be sure correct problem are being set to "Used" status when wrapping up a contest
- fix bug where one person gets logged off when it should be another
- pull chat, no one uses it, why both with it
- add contract area.  only those with the current contract can do work.
- problem doesn't show in problem_preview pane
- main problem room, method name = class name

- sign-up screen for contests.  allow people to sign-up to write or test
- past contests lists
- notes for problem
- notes for people
- use the new mail system instead of jma and the old objects.
- move to ApplicationServer.properties, DBMS.properties etc. files

- support web services.  not clear what exactly this means, but mpsqas will have to enable the writer to create and test a web service for use in team competitions.


CLIENT SIDE
-----------
- problem doesn't show in problem_preview pane
- main problem room, method name = class name
- move "all solutions always agree" message to after the results
- be sure mpsqas supports all the types the contest applet does (int, String, boolean, long, double, char, string[], int[])
- allow me to go from the User Information screen directly to a problem
- allow me to enter how much money they should get for their work.
- don't compress multiple consequtive spaces into 1 in the output screen.
- pull chat, no one uses it, why both with it
- allow for multi-select in tables and the ability to copy those rows
- add contract area.  only those with the current contract can do work.

- sign-up screen for contests.  allow people to sign-up to write or test
- filter lists of problems (probably check boxes at the top), possibly this should be a local written preferences file that would allow one to set what one wants to see on each of the pages that would make sense to have filtering.
- past contests lists
- notes for problem
- notes for people
- when sending email, there should be a list of all recipients, i should be able to exclude some to avoid spamming.
- the statement creation area should be separated out by section. (PROBLEM STATEMENT, NOTES, INPUT CONSTRAINTS).  the statement actually stored in the DB would include tags for each section, but the contest applet would view a "processed" version.  also, there should be a preview area in mpsqas.  (this will require us to implement a little ProblemStatementBuilder class that will take a tagged raw version and produce either plain text or html).  so this means that the writer gets to see the individual tabs for each section as well as a "preview" tab. testers just see the "preview" version.
- examples are not part of the problem statement, they are system generated.  allow test cases to be flagged as examples and provide an area for optional description text
- the definition is not part of the problem statement, it is system generated.
- allow for import/export of the entire test case section to a text file.  
- improve correspondence, consider making it a tree structure, or fail that... one should be able to right-click a correspondence and choose respond which would include the original's text.  
- also, if you make a new correspondence, it should be added to the list already, and it should be highlighted to suggest that it has not been sent yet.  this will allow one to begin a message, look at something someone else said, and then send their message.
- a tabbed or split pane for the writers/testers to separate problems their testing from those they're writing.
- include some versioning for the problem which would require a comment, also, display this "version" somewhere in the problem display.

- support web services.  not clear what exactly this means, but mpsqas will have to enable the writer to create and test a web service for use in team competitions.











































































************************************************************
 OLD STUFF DOWN HERE....IGNORE
************************************************************



*********** BUGS *************
- sucessful should be successful

- it doesn't appear that test all runs checkData if the status of the problem is proposal approved, but has not yet been submitted.

- no problem preview pane
 
- main problem room, method name = class name

- move "all solutions always agree" to after the results
 
- fix it so that it doesn't blow up the log every now and then

- fix it so that one person can't log someone else off

*********** ADDITIONAL FUNCTIONALITY ***************

- do the colors for peoples handles

- allow me to select multiple rows from the different tables and hit <ctrl>+c so that i can copy the info

- add a flag for writers and testers who have signed the respective contract

- the ability to filter out stuff in problem lists.  i think checkboxes at the top or something would do it.. one check box for each status of a problem, the checked ones are the ones you see, default, everything except used.

- Make it so users can request when they would like to test / write

- I think it would be nice if writers could see the list of problems with the status used...that way they could check if there ideas are to close to something that has been used.  Also, it would allow them to say "hey, that's my problem" so they all wouldn't have your name on them :)



- Problem Statement search tool, put class name, method name, problem statement contents.

- In addition to upcoming contests, i would like a past contests menu.  it should show me who wrote and tested, and then i can double click to get more info.

- on the contest information screen, it's lists the writers and testers.  since they're each associated with individual problems, i think this should be clear here...which problems they worked on.

- mass email.  i would like to be able to send an email to a group of mpsqas users.  we can discuss if mpsqas is the right place for this.  now, i have to solicit testers for upcoming contests via regular email...

- delete a problem...doesn't really delete anything, just sets a display flag.

- notes.  could be associated with a problem or a user.

- compose message for a particular person associated with problem. i don't need to spam the tester all the time...

- sys tests to check checkData - ask for further info


***************** BUGS THAT APPEAR FIXED - CAN'T REPRODUCE ******************************

- If I reject a problem proposal and they resubmit, It should still be a problem proposal, not a submission proposal.

- It seems to update too many problems to used after a contest.

***************** FIXED BUGS **************************

- Chat bug, if you type a really long line, it screws up the window

- We've got to kill that redundancy, the submitted_by column in the problem table.  That info should just be in the problem user table.  

- need a message of what's going on if someone tries to propose a problem and i have not accepted their request to be a writer. 

- can't seem to change the arguments or return of a problem

- not really a bug, but could we make the user name NOT case sensitive on log in

- doesn't seem to update problem_user.amount when one changes the difficulty of the problem

***************** ADDED FUNCTIONALITY **************************

- Iron man proposing and scheduling

- A central area for what has happened recently.  It would get me to recent correspondence quickly...the "Foyer"

- I would like to be able to set the primary solution in the admin part of a contest... in case the writer's solution is bad.  The admin should always get the primary solution as "theirs". 
