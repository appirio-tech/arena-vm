A. App Server:

1) Copy JBoss archive (e.g. jboss-3.0.6.zip: 29,131,377 bytes).

2) Unpack it (e.g. unzip jboss-3.0.6.zip)

3) In .profile set $JAVA_HOME (e.g. "JAVA_HOME=/usr/java; export JAVA_HOME")

4) If you're already running a JBoss instance at the computer, you need to change the following ports:
a) Webserver service (WebService) port, default: 8083, $JBOSS_HOME/server/default/conf/jboss-service.xml
b) Naming service port, default: 1099, $JBOSS_HOME/server/default/conf/jboss-service.xml
c) JRMP Invoker RMIObjectPort, default: 4444, $JBOSS_HOME/server/default/conf/jboss-service.xml
d) Jetty HTTP SocketListener port, default: 8080, $JBOSS_HOME/server/default/deploy/jbossweb.sar/META-INF/jboss-service.xml
e) Jetty AJP13Listener port, default: 8009, $JBOSS_HOME/server/default/deploy/jbossweb.sar/META-INF/jboss-service.xml
f) Delete $JBOSS_HOME/server/default/deploy/hsqldb-service.xml if hsqldb is not used
g) OILServerILService ServerBindPort, default: 8090, $JBOSS_HOME/server/default/deploy/jbossmq-service.xml
h) UILServerILService ServerBindPort, default: 8091, $JBOSS_HOME/server/default/deploy/jbossmq-service.xml

5) At this point you should be able to start and stop JBoss without any exceptions:
a) cd $JBOSS_HOME/bin
b) run.sh
c) Ctrl-C

6) Get the latest from the CVS repository (app module).

7) Set $JBOSS_HOME

8) Point the app server to the right DB server, $JBOSS_HOME/server/default/deploy/informix-service.xml

9) point to the App Server (JBoss): app/resources/screening/ScreeningApplicationServer.properties, EJB_SERVER_URL, JMS_SERVER_URL
(LoginBean)

10) Make sure that app/resources/DBMS.properties has the right values for JDBC_DRIVER (com.informix.jdbc.IfxDriver),
IS_DIRECT_INFORMIX_CONNECTION (true), IS_JBOSS_CONNECTION_POOLED (true). It's for ProblemServicesBean.

11) Make sure that app/resources/variations.properties has the right value for ApplicationServer (JBoss).
Make sure that app/resources/ApplicationServer_JBoss.properties points to the right AppServer (EJB_SERVER_URL).

12) set the correct path to problem.xsd in app/resources/ProblemParser.properties (schema key)

13) ant clean screening-ejb-jars

14) At this point you should be able to start and stop JBoss without any exceptions and you should see that all needed EJBs
are deployed fine.

15) Start the JBoss server.


B. Java/C++ compiler server.

1) In .profile set $JAVA_HOME (e.g. "JAVA_HOME=/usr/java; export JAVA_HOME")

2) point to the App Server (JBoss): app/resources/screening/ScreeningApplicationServer.properties, JMS_SERVER_URL

3) point to the proper place: app/resources/screening/ScreeningTester.properties, BASE

4) "ant compile-cpp"

5) "chmod +x app/cpp/timeout/timeout"

6) Start it.
a) cd app/scripts/screening/services
b) screening_compiler.sh <number of compilers>


C. Java/C++ tester server.

1) point to the App Server (JBoss): app/resources/screening/ScreeningApplicationServer.properties, JMS_SERVER_URL

2) Start it.
a) cd app/scripts/screening/services
b) screening_tester.sh <number of testers>


D. Listener (Screening Server).

1) Get the latest from the CVS repository (app module).

2) ant clean compile

3) point to the App Server (JBoss): app/resources/screening/ScreeningApplicationServer.properties, EJB_SERVER_URL, JMS_SERVER_URL

4) Start.
a) cd app/scripts/screening
b) screening.sh run/start <listener port> d <admin-listener port> d <dotNet port>


E. C# compiler/tester server.

1) Point it to the listener/screening server.

2) Start just like for the contest server.


F. Admin server.

1) point to the App Server (JBoss): app/resources/screening/ScreeningApplicationServer.properties, EJB_SERVER_URL

2) Start.
a) cd app/scripts/screening
b) screening_adminListener.sh <admin-client port> <listener_host:admin-listener port>
