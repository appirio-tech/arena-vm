Giorgos Zervas
Admin Tool - Group 3 - Phase 2 Changes
11/18/2003

IMPORTANT
---------
Before attempting to compile and run the program the following necessary changes must be done
to the database:

INSERT INTO monitor_function (monitor_function_id, name, monitor_function_desc, monitor_function_type_id)
VALUES (21703, 'Backup tables', 'Backup tables', 1);

INSERT INTO monitor_function (monitor_function_id, name, monitor_function_desc, monitor_function_type_id)
VALUES (21705, 'Restore tables', 'Restore tables', 1);

create table backup (
    backup_id DECIMAL(10,0) NOT NULL PRIMARY KEY,
    round_id DECIMAL (10,0) NOT NULL,
    timestamp DATETIME YEAR TO FRACTION NOT NULL,
    comment VARCHAR(254),
    FOREIGN KEY (round_id) REFERENCES round
);

create table backup_tables (
    backup_id DECIMAL(10,0) NOT NULL,
    table_name VARCHAR(18) NOT NULL,
    FOREIGN KEY (backup_id) REFERENCES backup
);

alter table staging_rating add backup_id DECIMAL(10,0) NOT NULL PRIMARY KEY;
alter table staging_challenge add backup_id DECIMAL(10,0) NOT NULL;
alter table staging_problem_state add backup_id DECIMAL(10,0) NOT NULL;
alter table staging_compilation add backup_id DECIMAL(10,0) NOT NULL;
alter table staging_submission add backup_id DECIMAL(10,0) NOT NULL;
alter table staging_room_result add backup_id DECIMAL(10,0) NOT NULL;
alter table staging_system_test_result add backup_id DECIMAL(10,0) NOT NULL;

After all of the above is done you have to make the newly added backup_id column of the staging tables is part
of the PRIMARY KEY. I accomplished that by using ServerStudio's GUI. You may wish to do it manually by
executing commands like:

EXAMPLE: alter table staging_rating drop constraint staging_rating_pkey;
EXAMPLE: alter table staging_rating add constraint primary key (coder_id, backup_id);

Making the backup_id column part of the primary key is necessary so that we can keep more than
one backups of the same table of the same round without causing primary key conflicts.

CHANGES
-------
 1. src/main/com/topcoder/client/contestMonitor/view/gui/menu/BackupRestoreSubmenu.java
    * new file, see inside for documentation

 2. src/main/com/topcoder/server/AdminListener/request/BackupTablesRequest.java
    * new file, see inside for documentation

 3. src/main/com/topcoder/server/AdminListener/request/RestoreTablesRequest.java
    * new file, see inside for documentation

 4. src/main/com/topcoder/server/AdminListener/request/GetBackupCopiesRequest.java
    * new file, see inside for documentation

 5. src/main/com/topcoder/server/AdminListener/response/BackupTablesAck.java
    * new file, see inside for documentation

 6. src/main/com/topcoder/server/AdminListener/response/RestoreTablesAck.java
    * new file, see inside for documentation

 7. src/main/com/topcoder/server/AdminListener/response/GetBackupCopiesResponse.java
    * new file, see inside for documentation

 8. src/main/com/topcoder/server/common/BackupCopy.java
    * new file, see inside for documentation

 9. src/main/com/topcoder/server/AdminListener/AdminConstants.java
    * added new constant TABLES_TO_BACKUP
    * added new constant REQUEST_BACKUP_TABLES
    * added new constant REQUEST_RESTORE_TABLES

10. src/main/com/topcoder/client/contestMonitor/model/CommandSender.java
    * new method sendBackupTables(int roundID, Set tableNames, String comment)
    * new method sendGetBackupCopies(int roundID)
    * new method sendRestoreTables(int backupID, Set tableNames)

11. src/main/com/topcoder/client/contestMonitor/model/MonitorNetClient.java
    * new method sendBackupTables(int roundID, Set tableNames, String comment)
    * new method sendGetBackupCopies(int roundID)
    * new method sendRestoreTables(int backupID, Set tableNames)

12. src/main/com/topcoder/client/contestMonitor/view/gui/menu/AfterContestSubmenu.java
    * added new menu "Backup/Restore tables"
    * in method applySecurity(): backupRestoreSubmenu.applySecurity(allowedFunctions);

13. src/main/com/topcoder/client/contestMonitor/model/ContestManagementController.java
    * new method public void backupTables(int roundID, Set tableNames, ResponseWaiter waiter)
    * new method public void restoreTables(int backupID, Set tableNames, ResponseWaiter waiter)
    * new method public GetBackupCopiesResponse getBackupCopiesResponse()
    * new method public void getBackupCopies(int roundID, ResponseWaiter waiter)
    * new attribute private GetBackupCopiesResponse backupCopiesResponse
    * in method public void receive(ContestManagementAck ack) added if clauses to catch
      BackupTablesAck, RestoreTablesAck, GetBackupCopiesResponse

14. src/main/com/topcoder/server/common/DBMS.java
    * added new constant BACKUP_SEQ

15. src/main/com/topcoder/server/AdminListener/ContestManagementProcessor.java
    * new method private BackupTablesAck processBackupTables(int roundID, Set tableNames)
    * new method private GetBackupCopiesResponse processGetBackupCopies(int roundID)
    * new method private BackupTablesAck processRestoreTables(int backupID, Set tableNames)
    * in method Object processRequest(ContestManagementRequest request) added three new
      clauses to if statement for processing BackupTablesRequest, GetBackupCopiesRequest, RestoreTablesRequest

16. src/main/com/topcoder/server/ejb/AdminServices/AdminServicesBean.java
    * new method public int backupTables(int roundID, Set tableNames) throws SQLException
      NOTE: original design defines this return type of this method to be void, however as discussed
            with designer this has been changed to long to facilitate test writing
    * new method public List getBackupCopies(int roundID) throws SQLException
    * new method public void restoreTables(int backupID, Set tableNames) throws SQLException
    * added constant private static final String GET_BACKUP_COPIES_QUERY
    * added constant private static final String INSERT_BACKUP_QUERY
    * added constant  private static final String INSERT_BACKUP_TABLES_QUERY

17. src/main/com/topcoder/server/ejb/AdminServices/AdminServices.java
    * new abstract method public int backupTables(int roundID, Set tableNames) throws SQLException, RemoteException
      NOTE: original design defines this return type of this method to be void, however as discussed
            with designer this has been changed to long to facilitate test writing
    * new abstract method public List getBackupCopies(int roundID) throws RemoteException, SQLException
    * new abstract method public void restoreTables(int backupID, Set tableNames) throws RemoteException, SQLException

18. src/testcases/com/topcoder/client/contestMonitor/model/BackupRestoreTest.java
    * new file, see inside for documentation

19. src/testcases/com/topcoder/server/ejb/AdminServices/BackupRestoreEJBTest.java
    * new file, see inside for documentation

20. src/testcases/com/topcoder/server/common/BackupCopyTest.java
    * new file, see inside for documentation

21. src/testcases/com/topcoder/server/AdminListener/request/BackupTablesRequestTest.java
    * new file, see inside for documentation

22. src/testcases/com/topcoder/server/AdminListener/request/GetBackupCopiesRequestTest.java
    * new file, see inside for documentation

23. src/testcases/com/topcoder/server/AdminListener/response/GetBackupCopiesResponseTest.java
    * new file, see inside for documentation

24. src/testcases/com/topcoder/server/AdminListener/request/RestoreTablesRequestTest.java
    * new file, see inside for documentation

25. build.xml
    * added testcase com.topcoder.client.contestMonitor.model.BackupRestoreTest in target "run-tests"
    * added testcase com.topcoder.server.ejb.AdminServices.BackupRestoreEJBTest in target "run-tests"
    * added testcase com.topcoder.server.common.BackupCopyTest in target "run-tests"
    * commented out testcase com.topcoder.utilities.screening.session.SessionSetupTest in target "run-tests"
    * added testcase com.topcoder.server.AdminListener.request.BackupTablesRequestTest in target "run-AdminServices-tests"
    * added testcase com.topcoder.server.AdminListener.request.GetBackupCopiesRequestTest in target "run-AdminServices-tests"
    * added testcase com.topcoder.server.AdminListener.response.GetBackupCopiesResponseTest in target "run-AdminServices-tests"
    * added testcase com.topcoder.server.AdminListener.request.RestoreTablesRequestTest in target "run-AdminServices-tests"

Post-review changes
-------------------

1. src/main/com/topcoder/server/ejb/AdminServices/AdminServices.java
    * changed return type of backupTables(int roundID, Set tableNames, String comment) from int to long

2. src/main/com/topcoder/server/ejb/AdminServices/AdminServicesBean.java
    * changed return type of backupTables(int roundID, Set tableNames, String comment) from int to long
    * changed backupTables(int roundID, Set tableNames, String comment) to throw exception if any item of the tablesNames set
      is null

3. src/main/com/topcoder/client/contestMonitor/view/gui/menu/BackupRestoreSubmenu.java
    * changed private GenericDialog getRestoreTablesDialog(int round) to only show a popup window if no backup
      copies are available for selected round
    * changed public void applySecurity(Set allowedFunctions) to disable menu if no round selected

4. src/testcases/com/topcoder/server/ejb/AdminServices/BackupRestoreEJBTest.java
    * changed public void testFullBackup() to accomodate for new return type of adminServices.backupTables() (long instead of int)
    * changed public void testPartialBackup() to accomodate for new return type of adminServices.backupTables() (long instead of int)
    * changed public void testEmptyBackup() to accomodate for new return type of adminServices.backupTables() (long instead of int)
    * corrected javadoc of public void testBackupNullComment()

5. src/testcases/com/topcoder/server/AdminListener/response/BackupTablesAckTest.java
    * new file, see inside for documentation

6. src/testcases/com/topcoder/server/AdminListener/response/RestoreTablesAckTest.java
    * new file, see inside for documentation

7. build.xml
    * added testcase <test name="com.topcoder.server.AdminListener.response.GetBackupCopiesResponseTest"/> in target "run-AdminServices-tests"
    * added testcase <test name="com.topcoder.server.AdminListener.response.BackupTablesAckTest"/> in target "run-AdminServices-tests"

8. src/testcases/com/topcoder/server/ejb/AdminServices/BackupRestoreEJBTest.java
    * where RemoteExceptions are thrown assert that the nested exception class is ServerException and the exception class
      nested in the latter is of the expected type (in this case IllegalArgumentException)
    * optimized imports

Tests
-----

Before running any tests you should make sure to start jboss, the contest listener and the admin listener by hand.
Otherwise the tests will fail. Also make sure that the values inside the file resources/testdata.properties
match the ones you use to start above services.

Here is how i start them and then run tests:
scripts/listener.sh start 9991 d 9992 d 9993
scripts/adminListener.sh start 9994 192.168.0.5:9992
ant run-tests

To run the admin services tests you don't need to start either the listener or the admin listener (even though
if they are already running it should not inhibit the process). Just run:
ant run-AdminServices-tests
