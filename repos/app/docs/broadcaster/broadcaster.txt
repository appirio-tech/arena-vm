1) To start the MIT Broadcaster:
java -cp <..> com.topcoder.server.broadcaster.MITBroadcaster <port>

or in app/scripts
mit_broadcaster.sh [run|start] <port>

port is the MIT broadcaster port.

To stop:
if started with run - Ctrl-C 
if started with start - mit_broadcaster.sh stop <port>

2) To start the Exodus Broadcaster:

java -cp <..> com.topcoder.server.broadcaster.ExodusBroadcaster <host> <port>

or in app/scripts
exodus_broadcaster.sh [run|start] <host> <port>

host is the MIT host, port is the MIT broadcaster port.

To stop:
if started with run - Ctrl-C 
if started with start - exodus_broadcaster.sh stop <host> <port>

3) app/resources/broadcaster.properties

MITLocalPort 
ExodusLocalPort

these ports will be used locally for connecting the broadcaster and local clients (connectors).

4) How to use local clients (connectors).

com.topcoder.server.broadcaster.MITLocalClient
(see com.topcoder.server.broadcaster.MITTester)

a) create: MITLocalClient localClient=new MITLocalClient();
b) start:  localClient.start();
c) send objects in a loop:  localClient.send(object);
d) stop:   localClient.stop();

com.topcoder.server.broadcaster.ExodusLocalClient
(see com.topcoder.server.broadcaster.ExodusTester)

a) create: ExodusLocalClient localClient=new ExodusLocalClient();
b) start:  localClient.start();
c) read objects in a loop:  Object obj=localClient.receive();
d) stop:   localClient.stop();

Note that in localClient.receive() is blocking and throws an InterruptedException
if interrupted.

5) The order of the startup and shutdown.

It shouldn't matter but the recommended (read most tested) way,

startup:

a) MITBroadcaster
b) ExodusBroadcaster
c) ExodusLocalClient (the Exodus main server)
d) MITLocalClient (the MIT main server)

shutdown in the opposite order, start with the MIT main server, etc.

Of course you can restart the Exodus and MIT main servers (see the spec).
