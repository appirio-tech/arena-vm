/* Generated By:JJTree&JavaCC: Do not edit this line. MSILParserConstants.java */
package com.topcoder.services.compiler.util.MSILParser;

public interface MSILParserConstants {

  int EOF = 0;
  int SINGLE_LINE_COMMENT = 11;
  int MULTI_LINE_COMMENT = 12;
  int LINE = 14;
  int ASSEMBLY = 15;
  int CLASS = 16;
  int CORFLAGS = 17;
  int CUSTOM = 18;
  int DATA = 19;
  int FIELD = 20;
  int FILE = 21;
  int HASH = 22;
  int ENTRYPOINT = 23;
  int METHOD = 24;
  int MODULE = 25;
  int MRESOURCE = 26;
  int SUBSYSTEM = 27;
  int VTFIXUP = 28;
  int ALIGNMENT = 29;
  int IMAGEBASE = 30;
  int LANGUAGE = 31;
  int NAMESPACE = 32;
  int CULTURE = 33;
  int PUBLICKEY = 34;
  int VER = 35;
  int PUBLICKEYTOKEN = 36;
  int EVENT = 37;
  int OVERRIDE = 38;
  int PACK = 39;
  int PARAM = 40;
  int PROPERTY = 41;
  int SIZE = 42;
  int EMITBYTE = 43;
  int LOCALS = 44;
  int MAXSTACK = 45;
  int GET = 46;
  int SET = 47;
  int OTHER = 48;
  int ADDON = 49;
  int FIRE = 50;
  int REMOVEON = 51;
  int TRY = 52;
  int PERMISSIONSET = 53;
  int PERMISSION = 54;
  int FLOAT32 = 55;
  int FLOAT64 = 56;
  int EXTERN = 57;
  int NOMETADATA = 58;
  int PUBLIC = 59;
  int PRIVATE = 60;
  int ALGORITHM = 61;
  int AT = 62;
  int AS = 63;
  int IMPLEMENTS = 64;
  int ABSTRACT = 65;
  int ANSI = 66;
  int AUTO = 67;
  int AUTOCHAR = 68;
  int BEFOREFIELDINIT = 69;
  int EXPLICIT = 70;
  int INSTANCE = 71;
  int INTERFACE = 72;
  int NESTED = 73;
  int ASSEMBLY_TYPE = 74;
  int FAMANDASSEM = 75;
  int FAMILY = 76;
  int FAMORASSEM = 77;
  int RTSPECIALNAME = 78;
  int SEALED = 79;
  int SEQUENTIAL = 80;
  int SERIALIZABLE = 81;
  int SPECIALNAME = 82;
  int UNICODE = 83;
  int IMPORT = 84;
  int CTOR = 85;
  int CCTOR = 86;
  int EXTENDS = 87;
  int WITH = 88;
  int TYPE = 89;
  int ELIPSES = 90;
  int DEFAULT_TOKEN = 91;
  int UNMANAGED = 92;
  int CDECL = 93;
  int FASTCALL = 94;
  int STDCALL = 95;
  int THISCALL = 96;
  int VARARG = 97;
  int MARSHAL = 98;
  int IN = 99;
  int OPT = 100;
  int OUT = 101;
  int INIT = 102;
  int COMPILERCONTROLLED = 103;
  int FINAL = 104;
  int NEWSLOT = 105;
  int PINVOKEIMPL = 106;
  int HIDEBYSIG = 107;
  int STATIC = 108;
  int VIRTUAL = 109;
  int STRICT = 110;
  int CIL = 111;
  int FORWARDREF = 112;
  int INTERNALCALL = 113;
  int MANAGED = 114;
  int NOINLINING = 115;
  int RUNTIME = 116;
  int SYNCHRONIZED = 117;
  int FROMUNMANAGED = 118;
  int PLATFORMAPI = 119;
  int INITONLY = 120;
  int LITERAL = 121;
  int NOTSERIALIZED = 122;
  int TRUE = 123;
  int FALSE = 124;
  int CATCH = 125;
  int FAULT = 126;
  int FINALLY = 127;
  int FILTER = 128;
  int TO = 129;
  int HANDLER = 130;
  int ASSERT = 131;
  int DEMAND = 132;
  int DENY = 133;
  int INHERITCHECK = 134;
  int LINKCHECK = 135;
  int PERMITONLY = 136;
  int REQOPT = 137;
  int REQREFUSE = 138;
  int REQUEST = 139;
  int BOOL_TYPE = 140;
  int CHAR_TYPE = 141;
  int CLASS_TYPE = 142;
  int UINT8_TYPE = 143;
  int UINT16_TYPE = 144;
  int UINT32_TYPE = 145;
  int UINT64_TYPE = 146;
  int INT8_TYPE = 147;
  int INT16_TYPE = 148;
  int INT32_TYPE = 149;
  int INT64_TYPE = 150;
  int NATIVE = 151;
  int UNSIGNED = 152;
  int INT_TYPE = 153;
  int OBJECT_TYPE = 154;
  int STRING_TYPE = 155;
  int MODOPT = 156;
  int MODREQ = 157;
  int PINNED = 158;
  int TYPEDREF = 159;
  int VALUETYPE = 160;
  int VOID_TYPE = 161;
  int METHOD_TYPE = 162;
  int LPSTR = 163;
  int LPWSTR = 164;
  int ANY = 165;
  int BYVALSTR = 166;
  int CUSTOM_TYPE = 167;
  int FIXED = 168;
  int ARRAY = 169;
  int SYSSTRING = 170;
  int LPSTRUCT = 171;
  int LPTSTR = 172;
  int STRUCT = 173;
  int BOXED = 174;
  int BYTEARRAY = 175;
  int NULLREF = 176;
  int DOT = 177;
  int COMMA = 178;
  int COLON = 179;
  int LEFT_PAREN = 180;
  int RIGHT_PAREN = 181;
  int LEFT_BRACE = 182;
  int RIGHT_BRACE = 183;
  int EQUALS = 184;
  int NOT = 185;
  int DOUBLENOT = 186;
  int LEFT_BRACKET = 187;
  int RIGHT_BRACKET = 188;
  int LESS_THAN = 189;
  int GREATER_THAN = 190;
  int AMP = 191;
  int ASTERISK = 192;
  int SLASH = 193;
  int PLUS = 194;
  int MINUS = 195;
  int DOUBLE_COLON = 196;
  int OP_BOX = 203;
  int OP_CASTCLASS = 204;
  int OP_CPOBJ = 205;
  int OP_INITOBJ = 206;
  int OP_ISINST = 207;
  int OP_LDELEM = 208;
  int OP_LDELEMA = 209;
  int OP_LDOBJ = 210;
  int OP_MKREFANY = 211;
  int OP_NEWARR = 212;
  int OP_REFANYVAL = 213;
  int OP_SIZEOF = 214;
  int OP_STOBJ = 215;
  int OP_UNBOX = 216;
  int OP_UNBOXANY = 217;
  int OP_BOXANY = 218;
  int OP_CONSTRAINED = 219;
  int OP_STELEM = 220;
  int OP_LDFLD = 221;
  int OP_LDFLDA = 222;
  int OP_LDSFLD = 223;
  int OP_LDSFLDA = 224;
  int OP_STFLD = 225;
  int OP_STSFLD = 226;
  int OP_CALL = 227;
  int OP_CALLVIRT = 228;
  int OP_JMP = 229;
  int OP_LDFTN = 230;
  int OP_LDVIRTFTN = 231;
  int OP_NEWOBJ = 232;
  int OP_BEQ = 233;
  int OP_BEQDOTS = 234;
  int OP_BGE = 235;
  int OP_BGEDOTS = 236;
  int OP_BGEDOTUN = 237;
  int OP_BGEDOTUNDOTS = 238;
  int OP_BGT = 239;
  int OP_BGTDOTS = 240;
  int OP_BGTDOTUN = 241;
  int OP_BGTDOTUNDOTS = 242;
  int OP_BLE = 243;
  int OP_BLEDOTS = 244;
  int OP_BLEDOTUN = 245;
  int OP_BLEDOTUNDOTS = 246;
  int OP_BLT = 247;
  int OP_BLTDOTS = 248;
  int OP_BLTDOTUN = 249;
  int OP_BLTDOTUNDOTS = 250;
  int OP_BNEDOTUN = 251;
  int OP_BNEDOTUNDOTS = 252;
  int OP_BR = 253;
  int OP_BRDOTS = 254;
  int OP_BRFALSE = 255;
  int OP_BRFALSEDOTS = 256;
  int OP_BRTRUE = 257;
  int OP_BRTRUEDOTS = 258;
  int OP_LEAVE = 259;
  int OP_LEAVEDOTS = 260;
  int OP_LDCDOTR4 = 261;
  int OP_LDCDOTR8 = 262;
  int OP_LDCDOTI4 = 263;
  int OP_LDCDOTI8 = 264;
  int OP_LDCDOTI4DOTS = 265;
  int OP_UNALIGNEDDOT = 266;
  int OP_LDARG = 267;
  int OP_LDARGDOTS = 268;
  int OP_LDARGA = 269;
  int OP_LDARGADOTS = 270;
  int OP_LDLOC = 271;
  int OP_LDLOCDOTS = 272;
  int OP_LDLOCA = 273;
  int OP_LDLOCADOTS = 274;
  int OP_STARG = 275;
  int OP_STARGDOTS = 276;
  int OP_STLOC = 277;
  int OP_STLOCDOTS = 278;
  int OP_ADD = 279;
  int OP_ADDDOTOVF = 280;
  int OP_ADDDOTOVFDOTUN = 281;
  int OP_AND = 282;
  int OP_ARGLIST = 283;
  int OP_BREAK = 284;
  int OP_CEQ = 285;
  int OP_CGT = 286;
  int OP_CGTDOTUN = 287;
  int OP_CKFINITE = 288;
  int OP_CLT = 289;
  int OP_CLTDOTUN = 290;
  int OP_CONVDOTI = 291;
  int OP_CONVDOTI1 = 292;
  int OP_CONVDOTI2 = 293;
  int OP_CONVDOTI4 = 294;
  int OP_CONVDOTI8 = 295;
  int OP_CONVDOTOVFDOTI = 296;
  int OP_CONVDOTOVFDOTIDOTUN = 297;
  int OP_CONVDOTOVFDOTI1 = 298;
  int OP_CONVDOTOVFDOTI1DOTUN = 299;
  int OP_CONVDOTOVFDOTI2 = 300;
  int OP_CONVDOTOVFDOTI2DOTUN = 301;
  int OP_CONVDOTOVFDOTI4 = 302;
  int OP_CONVDOTOVFDOTI4DOTUN = 303;
  int OP_CONVDOTOVFDOTI8 = 304;
  int OP_CONVDOTOVFDOTI8DOTUN = 305;
  int OP_CONVDOTOVFDOTU = 306;
  int OP_CONVDOTOVFDOTUDOTUN = 307;
  int OP_CONVDOTOVFDOTU1 = 308;
  int OP_CONVDOTOVFDOTU1DOTUN = 309;
  int OP_CONVDOTOVFDOTU2 = 310;
  int OP_CONVDOTOVFDOTU2DOTUN = 311;
  int OP_CONVDOTOVFDOTU4 = 312;
  int OP_CONVDOTOVFDOTU4DOTUN = 313;
  int OP_CONVDOTOVFDOTU8 = 314;
  int OP_CONVDOTOVFDOTU8DOTUN = 315;
  int OP_CONVDOTRDOTUN = 316;
  int OP_CONVDOTR4 = 317;
  int OP_CONVDOTR8 = 318;
  int OP_CONVDOTU = 319;
  int OP_CONVDOTU1 = 320;
  int OP_CONVDOTU2 = 321;
  int OP_CONVDOTU4 = 322;
  int OP_CONVDOTU8 = 323;
  int OP_CPBLK = 324;
  int OP_DIV = 325;
  int OP_DIVDOTUN = 326;
  int OP_DUP = 327;
  int OP_ENDFAULT = 328;
  int OP_ENDFILTER = 329;
  int OP_ENDFINALLY = 330;
  int OP_INITBLK = 331;
  int OP_LDARGDOT0 = 332;
  int OP_LDARGDOT1 = 333;
  int OP_LDARGDOT2 = 334;
  int OP_LDARGDOT3 = 335;
  int OP_LDCDOTI4DOT0 = 336;
  int OP_LDCDOTI4DOT1 = 337;
  int OP_LDCDOTI4DOT2 = 338;
  int OP_LDCDOTI4DOT3 = 339;
  int OP_LDCDOTI4DOT4 = 340;
  int OP_LDCDOTI4DOT5 = 341;
  int OP_LDCDOTI4DOT6 = 342;
  int OP_LDCDOTI4DOT7 = 343;
  int OP_LDCDOTI4DOT8 = 344;
  int OP_LDCDOTI4DOTM1 = 345;
  int OP_LDELEMDOTI = 346;
  int OP_LDELEMDOTI1 = 347;
  int OP_LDELEMDOTI2 = 348;
  int OP_LDELEMDOTI4 = 349;
  int OP_LDELEMDOTI8 = 350;
  int OP_LDELEMDOTR4 = 351;
  int OP_LDELEMDOTR8 = 352;
  int OP_LDELEMDOTREF = 353;
  int OP_LDELEMDOTU1 = 354;
  int OP_LDELEMDOTU2 = 355;
  int OP_LDELEMDOTU4 = 356;
  int OP_LDINDDOTI = 357;
  int OP_LDINDDOTI1 = 358;
  int OP_LDINDDOTI2 = 359;
  int OP_LDINDDOTI4 = 360;
  int OP_LDINDDOTI8 = 361;
  int OP_LDINDDOTR4 = 362;
  int OP_LDINDDOTR8 = 363;
  int OP_LDINDDOTREF = 364;
  int OP_LDINDDOTU1 = 365;
  int OP_LDINDDOTU2 = 366;
  int OP_LDINDDOTU4 = 367;
  int OP_LDLEN = 368;
  int OP_LDLOCDOT0 = 369;
  int OP_LDLOCDOT1 = 370;
  int OP_LDLOCDOT2 = 371;
  int OP_LDLOCDOT3 = 372;
  int OP_LDNULL = 373;
  int OP_LOCALLOC = 374;
  int OP_MUL = 375;
  int OP_MULDOTOVF = 376;
  int OP_MULDOTOVFDOTUN = 377;
  int OP_NEG = 378;
  int OP_NOP = 379;
  int OP_NOT = 380;
  int OP_OR = 381;
  int OP_POP = 382;
  int OP_READONLY = 383;
  int OP_REFANYTYPE = 384;
  int OP_REM = 385;
  int OP_REMDOTUN = 386;
  int OP_RET = 387;
  int OP_RETHROW = 388;
  int OP_SHL = 389;
  int OP_SHR = 390;
  int OP_SHRDOTUN = 391;
  int OP_STELEMDOTI = 392;
  int OP_STELEMDOTI1 = 393;
  int OP_STELEMDOTI2 = 394;
  int OP_STELEMDOTI4 = 395;
  int OP_STELEMDOTI8 = 396;
  int OP_STELEMDOTR4 = 397;
  int OP_STELEMDOTR8 = 398;
  int OP_STELEMDOTREF = 399;
  int OP_STINDDOTI = 400;
  int OP_STINDDOTI1 = 401;
  int OP_STINDDOTI2 = 402;
  int OP_STINDDOTI4 = 403;
  int OP_STINDDOTI8 = 404;
  int OP_STINDDOTR4 = 405;
  int OP_STINDDOTR8 = 406;
  int OP_STINDDOTREF = 407;
  int OP_STLOCDOT0 = 408;
  int OP_STLOCDOT1 = 409;
  int OP_STLOCDOT2 = 410;
  int OP_STLOCDOT3 = 411;
  int OP_SUB = 412;
  int OP_SUBDOTOVF = 413;
  int OP_SUBDOTOVFDOTUN = 414;
  int OP_TAILDOT = 415;
  int OP_THROW = 416;
  int OP_VOLATILEDOT = 417;
  int OP_XOR = 418;
  int HEX_VALID_ID = 419;
  int DECIMAL_BYTE = 420;
  int HEX_BYTE = 421;
  int DECIMAL_LITERAL = 422;
  int HEX_LITERAL = 423;
  int REAL_PIECE = 424;
  int EXPONENT = 425;
  int QSTRING = 426;
  int SQSTRING = 427;
  int QSTRING_LITERAL_PIECE = 428;
  int SQSTRING_LITERAL_PIECE = 429;
  int DOTTED_NAME = 430;
  int ID = 431;

  int DEFAULT = 0;
  int IN_ONLY_EOF = 1;
  int IN_SINGLE_LINE_COMMENT = 2;
  int IN_MULTI_LINE_COMMENT = 3;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\"\\f\"",
    "\"\\u001a\"",
    "<token of kind 5>",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\r\\n\"",
    "\"//\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "<token of kind 13>",
    "\".line\"",
    "\".assembly\"",
    "\".class\"",
    "\".corflags\"",
    "\".custom\"",
    "\".data\"",
    "\".field\"",
    "\".file\"",
    "\".hash\"",
    "\".entrypoint\"",
    "\".method\"",
    "\".module\"",
    "\".mresource\"",
    "\".subsystem\"",
    "\".vtfixup\"",
    "\"alignment\"",
    "\".imagebase\"",
    "\".language\"",
    "\".namespace\"",
    "\".culture\"",
    "\".publickey\"",
    "\".ver\"",
    "\".publickeytoken\"",
    "\".event\"",
    "\".override\"",
    "\".pack\"",
    "\".param\"",
    "\".property\"",
    "\".size\"",
    "\".emitbyte\"",
    "\".locals\"",
    "\".maxstack\"",
    "\".get\"",
    "\".set\"",
    "\".other\"",
    "\".addon\"",
    "\".fire\"",
    "\".removeon\"",
    "\".try\"",
    "\".permissionset\"",
    "\".permission\"",
    "\"float32\"",
    "\"float64\"",
    "\"extern\"",
    "\"nometadata\"",
    "\"public\"",
    "\"private\"",
    "\"algorithm\"",
    "\"at\"",
    "\"as\"",
    "\"implements\"",
    "\"abstract\"",
    "\"ansi\"",
    "\"auto\"",
    "\"autochar\"",
    "\"beforefieldinit\"",
    "\"explicit\"",
    "\"instance\"",
    "\"interface\"",
    "\"nested\"",
    "\"assembly\"",
    "\"famandassem\"",
    "\"family\"",
    "\"famorassem\"",
    "\"rtspecialname\"",
    "\"sealed\"",
    "\"sequential\"",
    "\"serializable\"",
    "\"specialname\"",
    "\"unicode\"",
    "\"import\"",
    "\".ctor\"",
    "\".cctor\"",
    "\"extends\"",
    "\"with\"",
    "\"type\"",
    "\"...\"",
    "\"default\"",
    "\"unmanaged\"",
    "\"cdecl\"",
    "\"fastcall\"",
    "\"stdcall\"",
    "\"thiscall\"",
    "\"vararg\"",
    "\"marshal\"",
    "\"in\"",
    "\"opt\"",
    "\"out\"",
    "\"init\"",
    "\"compilercontrolled\"",
    "\"final\"",
    "\"newslot\"",
    "\"pinvokeimpl\"",
    "\"hidebysig\"",
    "\"static\"",
    "\"virtual\"",
    "\"strict\"",
    "\"cil\"",
    "\"forwardref\"",
    "\"internalcall\"",
    "\"managed\"",
    "\"noinlining\"",
    "\"runtime\"",
    "\"synchronized\"",
    "\"fromunmanaged\"",
    "\"platformapi\"",
    "\"initonly\"",
    "\"literal\"",
    "\"notserialized\"",
    "\"true\"",
    "\"false\"",
    "\"catch\"",
    "\"fault\"",
    "\"finally\"",
    "\"filter\"",
    "\"to\"",
    "\"handler\"",
    "\"assert\"",
    "\"demand\"",
    "\"deny\"",
    "\"inheritcheck\"",
    "\"linkcheck\"",
    "\"permitonly\"",
    "\"reqopt\"",
    "\"reqrefuse\"",
    "\"request\"",
    "\"bool\"",
    "\"char\"",
    "\"class\"",
    "\"uint8\"",
    "\"uint16\"",
    "\"uint32\"",
    "\"uint64\"",
    "\"int8\"",
    "\"int16\"",
    "\"int32\"",
    "\"int64\"",
    "\"native\"",
    "\"unsigned\"",
    "\"int\"",
    "\"object\"",
    "\"string\"",
    "\"modopt\"",
    "\"modreq\"",
    "\"pinned\"",
    "\"typedref\"",
    "\"valuetype\"",
    "\"void\"",
    "\"method\"",
    "\"lpstr\"",
    "\"lpwstr\"",
    "\"any\"",
    "\"byvalstr\"",
    "\"custom\"",
    "\"fixed\"",
    "\"array\"",
    "\"sysstring\"",
    "\"lpstruct\"",
    "\"lptstr\"",
    "\"struct\"",
    "\"boxed\"",
    "\"bytearray\"",
    "\"nullref\"",
    "\".\"",
    "\",\"",
    "\":\"",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"=\"",
    "\"!\"",
    "\"!!\"",
    "\"[\"",
    "\"]\"",
    "\"<\"",
    "\">\"",
    "\"&\"",
    "\"*\"",
    "\"/\"",
    "\"+\"",
    "\"-\"",
    "\"::\"",
    "\".stackreserve\"",
    "\"ldstr\"",
    "\"calli\"",
    "\"field\"",
    "\"switch\"",
    "\"ldtoken\"",
    "\"box\"",
    "\"castclass\"",
    "\"cpobj\"",
    "\"initobj\"",
    "\"isinst\"",
    "\"ldelem\"",
    "\"ldelema\"",
    "\"ldobj\"",
    "\"mkrefany\"",
    "\"newarr\"",
    "\"refanyval\"",
    "\"sizeof\"",
    "\"stobj\"",
    "\"unbox\"",
    "\"unbox.any\"",
    "\"box.any\"",
    "\"constrained.\"",
    "\"stelem\"",
    "\"ldfld\"",
    "\"ldflda\"",
    "\"ldsfld\"",
    "\"ldsflda\"",
    "\"stfld\"",
    "\"stsfld\"",
    "\"call\"",
    "\"callvirt\"",
    "\"jmp\"",
    "\"ldftn\"",
    "\"ldvirtftn\"",
    "\"newobj\"",
    "\"beq\"",
    "\"beq.s\"",
    "\"bge\"",
    "\"bge.s\"",
    "\"bge.un\"",
    "\"bge.un.s\"",
    "\"bgt\"",
    "\"bgt.s\"",
    "\"bgt.un\"",
    "\"bgt.un.s\"",
    "\"ble\"",
    "\"ble.s\"",
    "\"ble.un\"",
    "\"ble.un.s\"",
    "\"blt\"",
    "\"blt.s\"",
    "\"blt.un\"",
    "\"blt.un.s\"",
    "\"bne.un\"",
    "\"bne.un.s\"",
    "\"br\"",
    "\"br.s\"",
    "\"brfalse\"",
    "\"brfalse.s\"",
    "\"brtrue\"",
    "\"brtrue.s\"",
    "\"leave\"",
    "\"leave.s\"",
    "\"ldc.r4\"",
    "\"ldc.r8\"",
    "\"ldc.i4\"",
    "\"ldc.i8\"",
    "\"ldc.i4.s\"",
    "\"unaligned.\"",
    "\"ldarg\"",
    "\"ldarg.s\"",
    "\"ldarga\"",
    "\"ldarga.s\"",
    "\"ldloc\"",
    "\"ldloc.s\"",
    "\"ldloca\"",
    "\"ldloca.s\"",
    "\"starg\"",
    "\"starg.s\"",
    "\"stloc\"",
    "\"stloc.s\"",
    "\"add\"",
    "\"add.ovf\"",
    "\"add.ovf.un\"",
    "\"and\"",
    "\"arglist\"",
    "\"break\"",
    "\"ceq\"",
    "\"cgt\"",
    "\"cgt.un\"",
    "\"ckfinite\"",
    "\"clt\"",
    "\"clt.un\"",
    "\"conv.i\"",
    "\"conv.i1\"",
    "\"conv.i2\"",
    "\"conv.i4\"",
    "\"conv.i8\"",
    "\"conv.ovf.i\"",
    "\"conv.ovf.i.un\"",
    "\"conv.ovf.i1\"",
    "\"conv.ovf.i1.un\"",
    "\"conv.ovf.i2\"",
    "\"conv.ovf.i2.un\"",
    "\"conv.ovf.i4\"",
    "\"conv.ovf.i4.un\"",
    "\"conv.ovf.i8\"",
    "\"conv.ovf.i8.un\"",
    "\"conv.ovf.u\"",
    "\"conv.ovf.u.un\"",
    "\"conv.ovf.u1\"",
    "\"conv.ovf.u1.un\"",
    "\"conv.ovf.u2\"",
    "\"conv.ovf.u2.un\"",
    "\"conv.ovf.u4\"",
    "\"conv.ovf.u4.un\"",
    "\"conv.ovf.u8\"",
    "\"conv.ovf.u8.un\"",
    "\"conv.r.un\"",
    "\"conv.r4\"",
    "\"conv.r8\"",
    "\"conv.u\"",
    "\"conv.u1\"",
    "\"conv.u2\"",
    "\"conv.u4\"",
    "\"conv.u8\"",
    "\"cpblk\"",
    "\"div\"",
    "\"div.un\"",
    "\"dup\"",
    "\"endfault\"",
    "\"endfilter\"",
    "\"endfinally\"",
    "\"initblk\"",
    "\"ldarg.0\"",
    "\"ldarg.1\"",
    "\"ldarg.2\"",
    "\"ldarg.3\"",
    "\"ldc.i4.0\"",
    "\"ldc.i4.1\"",
    "\"ldc.i4.2\"",
    "\"ldc.i4.3\"",
    "\"ldc.i4.4\"",
    "\"ldc.i4.5\"",
    "\"ldc.i4.6\"",
    "\"ldc.i4.7\"",
    "\"ldc.i4.8\"",
    "\"ldc.i4.m1\"",
    "\"ldelem.i\"",
    "\"ldelem.i1\"",
    "\"ldelem.i2\"",
    "\"ldelem.i4\"",
    "\"ldelem.i8\"",
    "\"ldelem.r4\"",
    "\"ldelem.r8\"",
    "\"ldelem.ref\"",
    "\"ldelem.u1\"",
    "\"ldelem.u2\"",
    "\"ldelem.u4\"",
    "\"ldind.i\"",
    "\"ldind.i1\"",
    "\"ldind.i2\"",
    "\"ldind.i4\"",
    "\"ldind.i8\"",
    "\"ldind.r4\"",
    "\"ldind.r8\"",
    "\"ldind.ref\"",
    "\"ldind.u1\"",
    "\"ldind.u2\"",
    "\"ldind.u4\"",
    "\"ldlen\"",
    "\"ldloc.0\"",
    "\"ldloc.1\"",
    "\"ldloc.2\"",
    "\"ldloc.3\"",
    "\"ldnull\"",
    "\"localloc\"",
    "\"mul\"",
    "\"mul.ovf\"",
    "\"mul.ovf.un\"",
    "\"neg\"",
    "\"nop\"",
    "\"not\"",
    "\"or\"",
    "\"pop\"",
    "\"readonly.\"",
    "\"refanytype\"",
    "\"rem\"",
    "\"rem.un\"",
    "\"ret\"",
    "\"rethrow\"",
    "\"shl\"",
    "\"shr\"",
    "\"shr.un\"",
    "\"stelem.i\"",
    "\"stelem.i1\"",
    "\"stelem.i2\"",
    "\"stelem.i4\"",
    "\"stelem.i8\"",
    "\"stelem.r4\"",
    "\"stelem.r8\"",
    "\"stelem.ref\"",
    "\"stind.i\"",
    "\"stind.i1\"",
    "\"stind.i2\"",
    "\"stind.i4\"",
    "\"stind.i8\"",
    "\"stind.r4\"",
    "\"stind.r8\"",
    "\"stind.ref\"",
    "\"stloc.0\"",
    "\"stloc.1\"",
    "\"stloc.2\"",
    "\"stloc.3\"",
    "\"sub\"",
    "\"sub.ovf\"",
    "\"sub.ovf.un\"",
    "\"tail.\"",
    "\"throw\"",
    "\"volatile.\"",
    "\"xor\"",
    "<HEX_VALID_ID>",
    "<DECIMAL_BYTE>",
    "<HEX_BYTE>",
    "<DECIMAL_LITERAL>",
    "<HEX_LITERAL>",
    "<REAL_PIECE>",
    "<EXPONENT>",
    "<QSTRING>",
    "<SQSTRING>",
    "<QSTRING_LITERAL_PIECE>",
    "<SQSTRING_LITERAL_PIECE>",
    "<DOTTED_NAME>",
    "<ID>",
  };

}
