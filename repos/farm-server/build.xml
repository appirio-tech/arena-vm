<?xml version="1.0" encoding="ISO-8859-1"?>
<project name="farm-server" basedir="." default="publish-workspace">
    <property name="root.dir" location="${basedir}/.." />
    <property name="glue.dir" location="${root.dir}/glue" />

    <import file="${glue.dir}/glue-jar.xml" />

    <target name="package-processor-deployment" depends="">
    	<property name="pkg.dir" value="${build.dir}/package/processor/deploy"/>
    	<mkdir dir="${pkg.dir}"/>
    	
    	<mkdir dir="${pkg.dir}/lib"/>
		<!-- TODO: have a serializable dependency on app (classes) -->
		<copy todir="${pkg.dir}/lib">
			<fileset dir="${build.artifacts.dir}" includes="farm-server-*.jar"/>
            <fileset dir="../dist/artifacts/" includes="classes-*.jar"/>
            <fileset dir="${build.lib.dir}">
                    <include name="client-socket-*.jar"/>
	            <include name="classes-*.jar"/>
	            <include name="compeng-common-*.jar"/>
	            <include name="spring-*.jar"/>
	            <include name="jackson*.jar"/>
	            <include name="commons-aws-*.jar"/>
	            <include name="aws-java-sdk*.jar"/>
	            <include name="commons-lang*.jar"/>
	            <include name="nbio-listener*.jar"/>
	            <include name="shared-3*.jar"/>
	            <include name="log4j*.jar"/>
	            <include name="logging-*.jar"/>
	            <include name="arena-shared-*.jar"/>
	            <include name="farm-shared-*.jar"/>
	            <include name="farm-client-*.jar"/>
	            <include name="farm-deployer-*.jar"/>
	            <include name="custom-serialization-*.jar"/>
	            <include name="basic_type_serialization-*.jar"/>
	            <include name="encoder-*.jar"/>
	            <include name="concurrent-*.jar"/>
		    	<!-- aws sdk dependencies -->
	            <include name="httpclient-*.jar"/>
	            <include name="httpcore-*.jar"/>
	            <include name="commons-*.jar"/>
	            <include name="joda-time-*.jar"/>
	        </fileset>
        </copy>
        
        <mkdir dir="${pkg.dir}/conf"/>
        <!-- we should give processor or processor-64bit -->
        <copy todir="${pkg.dir}/conf" flatten="true">
        	<fileset dir="../app/build/farm-deployer/deployment/processor${processorType}/deploy-in-classpath" includes="**/*"/>
        	<fileset file="${basedir}/src/resources/processor-applicationContext.xml"/>
        </copy>
        
        <copy todir="${pkg.dir}">
        	<fileset dir="../app/build/farm-deployer/deployment/processor${processorType}/deploy-in-appfolder" 
        		includes="app/**/*" excludes="app/cpp/sandbox2/GNU-i386-Linux"/>
        </copy>
        
        <copy todir="${pkg.dir}/app/cpp/sandbox2">
        	<fileset dir="../app/cpp/sandbox2" includes="GNU-i386-Linux/**/*"/>
        </copy>
        
        <mkdir dir="${pkg.dir}/bin"/>
        <copy todir="${pkg.dir}/bin">
        	<fileset dir="${basedir}/src/scripts" includes="*"/>
        </copy>
        
        <tar destfile="${build.artifacts.dir}/linux-osfiles.tgz" longfile="gnu" compression="gzip">
    		<tarfileset dir="${build.dir}/package" 
    			excludes="**/*.sh,**/sandbox2,**/*.so"/>
    		<tarfileset dir="${build.dir}/package" 
    			includes="**/*.sh,**/sandbox2,**/*.so" 
    			filemode="755"/>
    	</tar>
    	
    	<!-- create windows zip -->
	    <copy todir="${pkg.dir}/conf" flatten="true" overwrite="true">
        	<fileset dir="../app/build/farm-deployer/deployment/processor-windows-def-64bit/deploy-in-classpath" includes="**/*"/>
        </copy>
        
        <copy todir="${pkg.dir}" overwrite="true">
        	<fileset dir="../app/build/farm-deployer/deployment/processor-windows-def-64bit/deploy-in-appfolder" 
        		includes="app/**/*"/>
        </copy>
        
        <tar destfile="${build.artifacts.dir}/windows-osfiles.tgz" longfile="gnu" compression="gzip">
    		<tarfileset dir="${build.dir}/package" 
    			excludes="**/sandbox2,**/*.so"/>
    	</tar>

    </target>
</project>
